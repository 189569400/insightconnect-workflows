{
  "kom": {
    "komandVersion": "1.49.3-0-g7c412",
    "komFileVersion": "2.0.0",
    "exportedAt": "2020-04-30T03:19:07.985786011Z",
    "workflowVersions": [
      {
        "name": "Check Agent Status with Ivanti Security Controls from Slack",
        "type": "runnable",
        "version": "",
        "description": "This workflow accepts a Slack command containing a hostname and returns agent details and status from Ivanti Security Controls.\n\nSample Slack Trigger Commands: \ncheck-agent-status hostname-1",
        "graph": {
          "edges": {
            "27b13b43-f2b5-40b1-811a-317ecf1321e6": {
              "id": "27b13b43-f2b5-40b1-811a-317ecf1321e6",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "d79b7dd3-bc74-4649-8e24-67680740b43e",
              "toNodeId": "931acedc-cff6-4f18-b348-3ff465c997c1"
            },
            "57a5fbb6-9953-45a5-b5bb-f84c422b7fa3": {
              "id": "57a5fbb6-9953-45a5-b5bb-f84c422b7fa3",
              "name": "",
              "description": "",
              "parentNodeId": "103fd816-5be7-471a-8dc3-b846373703b2",
              "fromNodeId": "103fd816-5be7-471a-8dc3-b846373703b2",
              "toNodeId": "c1c59f37-375c-4dc4-a6eb-9c8190061036"
            },
            "746a4f42-27a0-4cdd-91f6-9ad469188965": {
              "id": "746a4f42-27a0-4cdd-91f6-9ad469188965",
              "name": "",
              "description": "",
              "parentNodeId": "103fd816-5be7-471a-8dc3-b846373703b2",
              "fromNodeId": "c1c59f37-375c-4dc4-a6eb-9c8190061036",
              "toNodeId": ""
            },
            "78ee22cd-6b02-4443-a369-b1e6ce2d087d": {
              "id": "78ee22cd-6b02-4443-a369-b1e6ce2d087d",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99",
              "toNodeId": "61855db7-9d9e-46ab-8176-6e18cd3d8299"
            },
            "79c7a1d6-04a6-4469-80b8-9ca0482ee533": {
              "id": "79c7a1d6-04a6-4469-80b8-9ca0482ee533",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "aa8aef01-53a9-436c-9bca-d6a25121c028",
              "toNodeId": "d79b7dd3-bc74-4649-8e24-67680740b43e"
            },
            "8e507bb4-57db-487a-9f5b-c4bba87bb8f1": {
              "id": "8e507bb4-57db-487a-9f5b-c4bba87bb8f1",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "1a20436a-d71c-4732-8b36-0dc6ad7012b4",
              "toNodeId": ""
            },
            "9fd9b028-abfa-49cb-ba52-e673ff26217a": {
              "id": "9fd9b028-abfa-49cb-ba52-e673ff26217a",
              "name": "Agent Not Found",
              "description": "Asset was not found in InsightVM.",
              "parentNodeId": "",
              "fromNodeId": "931acedc-cff6-4f18-b348-3ff465c997c1",
              "toNodeId": "083c5e17-52fc-49f3-a5e4-a8288f944434"
            },
            "c148234f-e796-469d-b16d-52efdf2bfe76": {
              "id": "c148234f-e796-469d-b16d-52efdf2bfe76",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "61855db7-9d9e-46ab-8176-6e18cd3d8299",
              "toNodeId": "aa8aef01-53a9-436c-9bca-d6a25121c028"
            },
            "c20b633e-f9ed-4a8b-9f11-83e37e42364c": {
              "id": "c20b633e-f9ed-4a8b-9f11-83e37e42364c",
              "name": "Agent Found",
              "description": "Asset was found in InsightVM.",
              "parentNodeId": "",
              "fromNodeId": "931acedc-cff6-4f18-b348-3ff465c997c1",
              "toNodeId": "103fd816-5be7-471a-8dc3-b846373703b2"
            },
            "d11bdcc2-53a6-412f-b657-9b28c2dbf810": {
              "id": "d11bdcc2-53a6-412f-b657-9b28c2dbf810",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "083c5e17-52fc-49f3-a5e4-a8288f944434",
              "toNodeId": ""
            },
            "defac0a6-65dd-4e7c-a1d1-38bdedd613a5": {
              "id": "defac0a6-65dd-4e7c-a1d1-38bdedd613a5",
              "name": "",
              "description": "",
              "parentNodeId": "",
              "fromNodeId": "103fd816-5be7-471a-8dc3-b846373703b2",
              "toNodeId": "1a20436a-d71c-4732-8b36-0dc6ad7012b4"
            }
          },
          "nodes": {
            "083c5e17-52fc-49f3-a5e4-a8288f944434": {
              "id": "083c5e17-52fc-49f3-a5e4-a8288f944434",
              "parentNodeId": ""
            },
            "103fd816-5be7-471a-8dc3-b846373703b2": {
              "id": "103fd816-5be7-471a-8dc3-b846373703b2",
              "parentNodeId": ""
            },
            "1a20436a-d71c-4732-8b36-0dc6ad7012b4": {
              "id": "1a20436a-d71c-4732-8b36-0dc6ad7012b4",
              "parentNodeId": ""
            },
            "61855db7-9d9e-46ab-8176-6e18cd3d8299": {
              "id": "61855db7-9d9e-46ab-8176-6e18cd3d8299",
              "parentNodeId": ""
            },
            "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99": {
              "id": "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99",
              "parentNodeId": ""
            },
            "931acedc-cff6-4f18-b348-3ff465c997c1": {
              "id": "931acedc-cff6-4f18-b348-3ff465c997c1",
              "parentNodeId": ""
            },
            "aa8aef01-53a9-436c-9bca-d6a25121c028": {
              "id": "aa8aef01-53a9-436c-9bca-d6a25121c028",
              "parentNodeId": ""
            },
            "c1c59f37-375c-4dc4-a6eb-9c8190061036": {
              "id": "c1c59f37-375c-4dc4-a6eb-9c8190061036",
              "parentNodeId": "103fd816-5be7-471a-8dc3-b846373703b2"
            },
            "d79b7dd3-bc74-4649-8e24-67680740b43e": {
              "id": "d79b7dd3-bc74-4649-8e24-67680740b43e",
              "parentNodeId": ""
            }
          }
        },
        "steps": {
          "083c5e17-52fc-49f3-a5e4-a8288f944434": {
            "nodeId": "083c5e17-52fc-49f3-a5e4-a8288f944434",
            "name": "Agent Not Found Message",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": "No results matching `{{[61855db7-9d9e-46ab-8176-6e18cd3d8299].[hostname]}}` were found in Ivanti Security Console.\nhttps://media.giphy.com/media/14uQ3cOFteDaU/giphy.gif",
                "recipient": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel_id]}}",
                "thread_ts": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[ts]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see https://api.slack.com/docs/message-attachments (Advanced)",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "103fd816-5be7-471a-8dc3-b846373703b2": {
            "nodeId": "103fd816-5be7-471a-8dc3-b846373703b2",
            "name": "Agents Loop",
            "type": "loop",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "customOutput": [],
              "innerEdgeId": "57a5fbb6-9953-45a5-b5bb-f84c422b7fa3",
              "nextEdgeId": "defac0a6-65dd-4e7c-a1d1-38bdedd613a5",
              "repeatVariable": "{{[d79b7dd3-bc74-4649-8e24-67680740b43e].[agents]}}"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": {
              "properties": {
                "$outputs": {
                  "items": {
                    "properties": {},
                    "type": "object"
                  },
                  "title": "$outputs",
                  "type": "array"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "defaultImageData": "https://us.cdn-assets.connect.insight.rapid7.com/step-type-icons/loop.svg",
            "connectionType": "NONE"
          },
          "1a20436a-d71c-4732-8b36-0dc6ad7012b4": {
            "nodeId": "1a20436a-d71c-4732-8b36-0dc6ad7012b4",
            "name": "Final Report",
            "type": "artifact",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "content": "# Trigger\n_{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[user]}}_ started Check Agent Status workflow with the search term _{{[61855db7-9d9e-46ab-8176-6e18cd3d8299].[hostname]}}_ in the _{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel]}}_ channel at _{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[timestamp]}}_.\n\n# Search Results\n_{{[61855db7-9d9e-46ab-8176-6e18cd3d8299].[hostname]}}_ yielded the following search results in Ivanti:\n{{# each [d79b7dd3-bc74-4649-8e24-67680740b43e].[agents]}}\n{{this.[machineName]}} : {{this.[agentId]}}\n{{/each}}\n\n# Outcome\nPosted asset details to the _{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel]}}_ channel in Slack."
              },
              "type": "markdown"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://us.cdn-assets.connect.insight.rapid7.com/step-type-icons/artifact.svg",
            "connectionType": "NONE"
          },
          "61855db7-9d9e-46ab-8176-6e18cd3d8299": {
            "nodeId": "61855db7-9d9e-46ab-8176-6e18cd3d8299",
            "name": "Extract Hostname",
            "type": "pattern_match",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "captureAll": false,
              "expressionText": "check-agent-status {{hostname:/.*/}}",
              "expressions": [
                {
                  "type": "text",
                  "value": "check-agent-status "
                },
                {
                  "type": "variable",
                  "value": {
                    "ident": "hostname",
                    "regex": ".*"
                  }
                }
              ],
              "ignoreCase": true,
              "input": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[text]}}"
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://us.cdn-assets.connect.insight.rapid7.com/step-type-icons/pattern-match.svg",
            "connectionType": "NONE"
          },
          "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99": {
            "nodeId": "8b5f067d-03aa-4d9e-a06b-5ad7dda77b99",
            "name": "Check Agent Status Slack Trigger",
            "description": "Trigger this workflow by entering a Slack command in the following format:\n\"@slackbot check-agent-status hostname-1\"\n",
            "type": "trigger",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "matchChannel": "",
                "matchText": "(?i)check-agent-status",
                "type": "any"
              }
            },
            "triggerId": "d018d8a1-58bf-495e-b315-bad2d901318b",
            "defaultInputJSONSchema": {
              "properties": {
                "matchChannel": {
                  "description": "Regex to match for channel name",
                  "order": 1,
                  "title": "Match Channel",
                  "type": "string"
                },
                "matchText": {
                  "description": "Regex to match for Slack message content",
                  "order": 2,
                  "title": "Match Text",
                  "type": "string"
                },
                "type": {
                  "default": "any",
                  "description": "Desired Slack channel type: direct message to Slack app, group chats, or all channels",
                  "enum": [
                    "any",
                    "direct",
                    "group"
                  ],
                  "order": 3,
                  "title": "Type",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "definitions": {
                "message": {
                  "properties": {
                    "channel": {
                      "description": "Channel name",
                      "order": 3,
                      "title": "Channel",
                      "type": "string"
                    },
                    "channel_id": {
                      "description": "Slack channel ID",
                      "order": 4,
                      "title": "Channel ID",
                      "type": "string"
                    },
                    "text": {
                      "description": "Text",
                      "order": 5,
                      "title": "Text",
                      "type": "string"
                    },
                    "ts": {
                      "description": "Timestamp",
                      "order": 6,
                      "title": "Ts",
                      "type": "string"
                    },
                    "user": {
                      "description": "User name",
                      "order": 1,
                      "title": "User",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Slack User ID",
                      "order": 2,
                      "title": "User ID",
                      "type": "string"
                    }
                  },
                  "title": "Message",
                  "type": "object"
                }
              },
              "properties": {
                "display_name": {
                  "description": "User display name",
                  "order": 4,
                  "title": "Display Name",
                  "type": "string"
                },
                "message": {
                  "$ref": "#/definitions/message",
                  "description": "Message",
                  "order": 1,
                  "title": "Message"
                },
                "timestamp": {
                  "description": "Timestamp",
                  "order": 3,
                  "title": "Timestamp",
                  "type": "string"
                },
                "type": {
                  "description": "Message Type",
                  "order": 2,
                  "title": "Type",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "https://us.cdn-assets.connect.insight.rapid7.com/step-type-icons/chatops.svg",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "message"
          },
          "931acedc-cff6-4f18-b348-3ff465c997c1": {
            "nodeId": "931acedc-cff6-4f18-b348-3ff465c997c1",
            "name": "Asset Found?",
            "type": "automated_decision",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "defaultEdgeId": "9fd9b028-abfa-49cb-ba52-e673ff26217a",
              "stepControlParams": [
                {
                  "edgeId": "9fd9b028-abfa-49cb-ba52-e673ff26217a",
                  "expression": {},
                  "expressionText": ""
                },
                {
                  "edgeId": "c20b633e-f9ed-4a8b-9f11-83e37e42364c",
                  "expression": {
                    "left": {
                      "name": "d79b7dd3-bc74-4649-8e24-67680740b43e.count",
                      "type": "variable"
                    },
                    "op": ">",
                    "right": {
                      "type": "literal",
                      "value": 0
                    },
                    "type": "binary"
                  },
                  "expressionText": "{{[d79b7dd3-bc74-4649-8e24-67680740b43e].[count]}} > 0"
                }
              ]
            },
            "defaultInputJSONSchema": null,
            "defaultOutputJSONSchema": null,
            "outputJSONSchema": null,
            "defaultImageData": "https://us.cdn-assets.connect.insight.rapid7.com/step-type-icons/automated-decision.svg",
            "connectionType": "NONE"
          },
          "aa8aef01-53a9-436c-9bca-d6a25121c028": {
            "nodeId": "aa8aef01-53a9-436c-9bca-d6a25121c028",
            "name": "Searching Notification",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": "_Searching for `{{[61855db7-9d9e-46ab-8176-6e18cd3d8299].[hostname]}}`..._",
                "recipient": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel_id]}}",
                "thread_ts": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[ts]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see https://api.slack.com/docs/message-attachments (Advanced)",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "c1c59f37-375c-4dc4-a6eb-9c8190061036": {
            "nodeId": "c1c59f37-375c-4dc4-a6eb-9c8190061036",
            "name": "Post to Slack",
            "type": "action_chatops",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "attachments": [],
                "message": "*Agent Status*\n```\nHostname: {{[103fd816-5be7-471a-8dc3-b846373703b2].[$item].[machineName]}}\nAgent ID: {{[103fd816-5be7-471a-8dc3-b846373703b2].[$item].[agentId]}}\nStatus: {{[103fd816-5be7-471a-8dc3-b846373703b2].[$item].[status]}}\nLast Checkin-In Time: {{[103fd816-5be7-471a-8dc3-b846373703b2].[$item].[lastCheckIn]}}\n```",
                "recipient": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[message].[channel_id]}}",
                "thread_ts": "{{[8b5f067d-03aa-4d9e-a06b-5ad7dda77b99].[timestamp]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "attachments": {
                  "description": "JSON array of attachments - see https://api.slack.com/docs/message-attachments (Advanced)",
                  "items": {
                    "type": "object"
                  },
                  "order": 4,
                  "title": "Attachments",
                  "type": "array"
                },
                "message": {
                  "description": "Message to send",
                  "order": 3,
                  "title": "Message",
                  "type": "string"
                },
                "recipient": {
                  "description": "Channels begin with # (e.g. #channel) and usernames begin with @ (e.g. @username)",
                  "order": 1,
                  "title": "Enter #channel or @username",
                  "type": "string"
                },
                "thread_ts": {
                  "description": "Select timestamp output variable from parent message step",
                  "order": 2,
                  "title": "To post in a thread, select parent message timestamp",
                  "type": "string"
                }
              },
              "required": [
                "recipient"
              ],
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "properties": {
                "channel_id": {
                  "description": "ChannelID of successful message",
                  "order": 1,
                  "title": "Channel ID",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of successful message",
                  "order": 2,
                  "title": "Timestamp",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "NONE",
            "chatOpsAppName": "slack",
            "chatOpsIdentifier": "post_message"
          },
          "d79b7dd3-bc74-4649-8e24-67680740b43e": {
            "nodeId": "d79b7dd3-bc74-4649-8e24-67680740b43e",
            "name": "Search for Agent",
            "type": "action",
            "plugin": {
              "name": "Ivanti Security Controls",
              "slugVendor": "rapid7",
              "slugName": "ivanti_security_controls",
              "slugVersion": "1.0.0",
              "imageData": "https://us.cdn-assets.connect.insight.rapid7.com/icons/rapid7/ivanti_security_controls/1.0.0/icon.png"
            },
            "identifier": "get_agents",
            "continueOnFailure": false,
            "isDisabled": false,
            "parameters": {
              "input": {
                "agent_configuration_filter": "All",
                "name_filter": "{{[61855db7-9d9e-46ab-8176-6e18cd3d8299].[hostname]}}"
              }
            },
            "defaultInputJSONSchema": {
              "properties": {
                "agent_configuration_filter": {
                  "default": "All",
                  "description": "Filters agents based on listening configuration",
                  "enum": [
                    "Listening",
                    "Not Listening",
                    "All"
                  ],
                  "order": 1,
                  "title": "Agent Configuration Filter",
                  "type": "string"
                },
                "name_filter": {
                  "description": "Filters agents where host or DNS name equals this value",
                  "order": 2,
                  "title": "Name Filter",
                  "type": "string"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "defaultOutputJSONSchema": {
              "definitions": {
                "agent_detail": {
                  "properties": {
                    "agentId": {
                      "description": "The agent ID",
                      "order": 1,
                      "title": "Agent ID",
                      "type": "string"
                    },
                    "assignedPolicyId": {
                      "description": "The unique identifier of the policy that is in effect for this agent",
                      "order": 2,
                      "title": "Assigned Policy ID",
                      "type": "string"
                    },
                    "dnsName": {
                      "description": "The DNS name of the agent machine",
                      "order": 3,
                      "title": "DNS Name",
                      "type": "string"
                    },
                    "domain": {
                      "description": "The domain of the agent machine",
                      "order": 4,
                      "title": "Domain",
                      "type": "string"
                    },
                    "frameworkVersion": {
                      "description": "The installed agent framework version",
                      "order": 5,
                      "title": "Framework Version",
                      "type": "string"
                    },
                    "isListening": {
                      "description": "Specifies if the agent is a listening agent",
                      "order": 6,
                      "title": "Is Listening",
                      "type": "boolean"
                    },
                    "lastCheckIn": {
                      "description": "The date and time of the most recent check-in",
                      "order": 7,
                      "title": "Last Check-In",
                      "type": "string"
                    },
                    "lastKnownIPAddress": {
                      "description": "The last known IP address of the agent machine",
                      "order": 8,
                      "title": "Last Known IP Address",
                      "type": "string"
                    },
                    "links": {
                      "description": "Shows the related URLs for the agent",
                      "order": 13,
                      "title": "Agent Links",
                      "type": "object"
                    },
                    "listeningPort": {
                      "description": "The listening port number",
                      "order": 9,
                      "title": "Listening Port",
                      "type": "integer"
                    },
                    "machineName": {
                      "description": "The agent machine's host name",
                      "order": 10,
                      "title": "Machine Name",
                      "type": "string"
                    },
                    "reportedPolicyId": {
                      "description": "The agent policy ID",
                      "order": 11,
                      "title": "Reported Policy ID",
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the agent",
                      "order": 12,
                      "title": "Status",
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "agentId"
                  ],
                  "title": "Agent Detail",
                  "type": "object"
                }
              },
              "properties": {
                "agents": {
                  "description": "List of agent details",
                  "items": {
                    "$ref": "#/definitions/agent_detail"
                  },
                  "order": 2,
                  "title": "Agents",
                  "type": "array"
                },
                "count": {
                  "description": "Number of agents returned",
                  "order": 1,
                  "title": "Count",
                  "type": "integer"
                }
              },
              "title": "Variables",
              "type": "object"
            },
            "outputJSONSchema": null,
            "defaultImageData": "",
            "connectionType": "CONNECTION"
          }
        },
        "tags": null,
        "humanCostSeconds": 0,
        "humanCostDisplayUnit": ""
      }
    ],
    "triggers": [
      {
        "id": "d018d8a1-58bf-495e-b315-bad2d901318b",
        "name": "Check Agent Status Slack Trigger",
        "description": "Trigger this workflow by entering a Slack command in the following format:\n\"@slackbot check-agent-status hostname-1\"\n",
        "input": {
          "matchChannel": "",
          "matchText": "(?i)check-agent-status",
          "type": "any"
        },
        "inputJsonSchema": {
          "properties": {
            "matchChannel": {
              "description": "Regex to match for channel name",
              "order": 1,
              "title": "Match Channel",
              "type": "string"
            },
            "matchText": {
              "description": "Regex to match for Slack message content",
              "order": 2,
              "title": "Match Text",
              "type": "string"
            },
            "type": {
              "default": "any",
              "description": "Desired Slack channel type: direct message to Slack app, group chats, or all channels",
              "enum": [
                "any",
                "direct",
                "group"
              ],
              "order": 3,
              "title": "Type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "Variables",
          "type": "object"
        },
        "outputJsonSchema": {
          "definitions": {
            "message": {
              "properties": {
                "channel": {
                  "description": "Channel name",
                  "order": 3,
                  "title": "Channel",
                  "type": "string"
                },
                "channel_id": {
                  "description": "Slack channel ID",
                  "order": 4,
                  "title": "Channel ID",
                  "type": "string"
                },
                "text": {
                  "description": "Text",
                  "order": 5,
                  "title": "Text",
                  "type": "string"
                },
                "ts": {
                  "description": "Timestamp",
                  "order": 6,
                  "title": "Ts",
                  "type": "string"
                },
                "user": {
                  "description": "User name",
                  "order": 1,
                  "title": "User",
                  "type": "string"
                },
                "user_id": {
                  "description": "Slack User ID",
                  "order": 2,
                  "title": "User ID",
                  "type": "string"
                }
              },
              "title": "Message",
              "type": "object"
            }
          },
          "properties": {
            "display_name": {
              "description": "User display name",
              "order": 4,
              "title": "Display Name",
              "type": "string"
            },
            "message": {
              "$ref": "#/definitions/message",
              "description": "Message",
              "order": 1,
              "title": "Message"
            },
            "timestamp": {
              "description": "Timestamp",
              "order": 3,
              "title": "Timestamp",
              "type": "string"
            },
            "type": {
              "description": "Message Type",
              "order": 2,
              "title": "Type",
              "type": "string"
            }
          },
          "title": "Variables",
          "type": "object"
        },
        "tags": [],
        "type": "trigger_chatops",
        "chatOpsAppName": "slack",
        "chatOpsIdentifier": "message"
      }
    ]
  }
}